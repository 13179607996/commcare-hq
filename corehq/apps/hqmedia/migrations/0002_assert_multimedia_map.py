# -*- coding: utf-8 -*-
# Generated by Django 1.11.22 on 2019-11-16 17:38
from django.db import migrations, models

from corehq.apps.app_manager.dbaccessors import wrap_app
from corehq.apps.app_manager.models import Application, LinkedApplication
from corehq.apps.hqmedia.dbaccessors import migrate_multimedia_map
from corehq.apps.hqmedia.models import ApplicationMediaMapping
from corehq.dbaccessors.couchapps.all_docs import (
    get_deleted_doc_ids_by_class,
    get_doc_ids_by_class,
)
from corehq.util.django_migrations import skip_on_fresh_install
from dimagi.utils.couch.database import iter_docs


MISMATCH_MESSAGE = """
    TODO
"""

AUTO_MIGRATE_FAILED_MESSAGE = """
    TODO
"""


@skip_on_fresh_install
def _assert_multimedia_map_migration(apps, schema_editor):
    app_ids = (get_doc_ids_by_class(Application)
               + get_doc_ids_by_class(LinkedApplication)
               + get_deleted_doc_ids_by_class(Application)
               + get_deleted_doc_ids_by_class(LinkedApplication))
    migration_count = 0
    for doc in iter_docs(Application.get_db(), app_ids, chunksize=1):
        couch_count = len(doc.get('multimedia_map', {}))
        sql_count = ApplicationMediaMapping.objects.filter(domain=doc['domain'], app_id=doc['_id']).count()
        if couch_count and not sql_count:
            migrate_multimedia_map(doc)
            migration_count += 1
        elif couch_count != sql_count:
            print(MISMATCH_MESSAGE)
            sys.exit(1)
        if migration_count > 100:
            print(AUTO_MIGRATE_FAILED_MESSAGE)
            sys.exit(1)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hqmedia', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(_assert_multimedia_map_migration,
            reverse_code=migrations.RunPython.noop,
            elidable=True),
    ]
