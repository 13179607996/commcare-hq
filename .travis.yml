language: python
sudo: false
cache:
  directories:
    - $HOME/.cache/pip
python:
  - "2.7"
env:
  global:
    - CFLAGS=-O0
    - COUCHDB_USER=""
    - COUCHDB_PW=""
    - TRAVIS_INSTALL="y"
  matrix:
    - TEST_RUNNER=testrunner.GroupTestRunnerCatchall
    - TEST_RUNNER=testrunner.GroupTestRunner0
branches:
  only:
    - master
before_install:
  - "curl http://localhost:5984/"  # print couch info
  - "uname -a"
  - "lsb_release -a"
  # kafka install, copied from https://github.com/wvanbergen/kafka/blob/master/.travis.yml
  - wget http://www.us.apache.org/dist/kafka/0.8.2.1/kafka_2.10-0.8.2.1.tgz -O kafka.tgz
  - mkdir -p kafka && tar xzf kafka.tgz -C kafka --strip-components 1
  - nohup bash -c "cd kafka && bin/zookeeper-server-start.sh config/zookeeper.properties &"
  - nohup bash -c "cd kafka && bin/kafka-server-start.sh config/server.properties &"
  - sleep 5
  - kafka/bin/kafka-topics.sh --create --partitions 1 --replication-factor 1 --topic case --zookeeper localhost:2181
addons:
  apt:
    packages:
    - moreutils
    - libblas-dev
    - liblapack-dev
install:
  - "git clone https://github.com/dimagi/commcarehq-venv.git"
  - "cp -r commcarehq-venv/hq_env/* ~/virtualenv/"
  - "source ~/virtualenv/bin/activate"
  - "bash -e scripts/uninstall-requirements.sh"
  # set env variables for couch username/password, used by install.sh, to blank
  - "bash -e .travis/quietly-run-install.sh"
  - "curl -X PUT http://localhost:5984/commcarehq_test"  # this is an auth test
  - "time (pip install --exists-action w -r requirements/requirements.txt --use-mirrors --timeout 60)"
  - "bash -e .travis/misc-setup.sh"
  - "cp .travis/localsettings.py localsettings.py"
  - "pip install coverage unittest2 mock --use-mirrors"
  - "npm install -g bower"
  - "npm install -g grunt"
  - "npm install -g grunt-cli"
  - "ln -nfs `which bower` /home/travis/bower"
  - "python manage.py bower install"
  - "python manage.py migrate --noinput"
  - "python manage.py runserver 8000 &" # Used to run mocha browser tests
  - "npm install"
script: "coverage run manage.py test --noinput --failfast --traceback --verbosity=2 --testrunner=$TEST_RUNNER && grunt mocha"
after_success:
  - coverage report
  - coveralls
services:
  - postgresql
  - couchdb
  - redis-server
